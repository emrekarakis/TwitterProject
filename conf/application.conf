# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false
userAgent="emrekarakisApp2"
twitterHost="api.twitter.com"
consumerKey="68Vr28ykVT8ulK1zm8uz64Y2S"
consumerSecret="QRr2Wn4B2hKI14IvlTT4c7mCS0ZZOvnB2rk1BHpkpukrvjwChd"
oauthToken="366636780-jzbduVWTDo5kdxBZq6zINJ8KHisy3MlGVYRYJQD4"
urlToken="https://api.twitter.com/oauth2/token"
accessTokenSecret="h2QxWpbA4qHqjlH24WiuSv7m7I9ruJVxQfX7AJxLtU79p"
urlFriendList="https://api.twitter.com/1.1/friends/list.json?skip_status=true&screen_name=emrekarakis91"
urlCustomSearch="https://www.googleapis.com/customsearch/v1?"
apiKey= "AIzaSyD9dbxJk3SZZoAA_JP63Rak22r7sZ2-rbY" # emrekarakis@gmail.com  "AIzaSyA_TzAJZqnw4zKZCk57HBXBp5GrbvMyEEo"           #sbsiyte@gmail.com   "AIzaSyD9dbxJk3SZZoAA_JP63Rak22r7sZ2-rbY"
customSearchEngineId="012213713548145608376:4-wu0mtkgya" #emrekarakis@gmail.com "008728133401781766685:gksdrpodf14"           #sbsiyte@gmail.com  "012213713548145608376:4-wu0mtkgya"
alt="json"




play {
  akka {
    akka.loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]
    loglevel = DEBUG
    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-factor = 5.0
          parallelism-max = 40
        }
      }
    }
  }
}

contexts {
  critical-ops {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 10.0
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 20
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 80
    }
  }
  generic-ops {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 10.0
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 40
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 80
    }
  }
  slow-io-ops {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 100.0
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 200
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 400
    }
  }
  slow-cpu-ops {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher

    # What kind of ExecutionService to use
    executor = "fork-join-executor"

    # Configuration for the fork join pool
    fork-join-executor {
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 10
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 20
    }
  }

}
